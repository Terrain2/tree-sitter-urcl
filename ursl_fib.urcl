BITS 8
MINHEAP 0
MINSTACK 200
MINREG 3
CAL .func__main
HLT
.data__str
DW [ 'H' 'e' 'l' 'l' 'o' ',' 32 'W' 'o' 'r' 'l' 'd' ]
.data__escape
DW '\n'
.data__num
DW 32
.data__nums
DW [ 1 2 3 4 @MAX ]
.data__vtable_under_or_under_something
DW [ .func__func_under_fib ]
.func__fib
// +0; 0 -> 1
LLOD $1 SP 1
// +0; 1 -> 2
// +2; 2 -> 3
IMM $2 0
// +1; 3 -> 1
MOV $3 $2
MOV $2 $1
BRE .label__fib__base_under_case $2 $3
// +0; 1 -> 2
// +2; 2 -> 3
IMM $2 1
// +1; 3 -> 1
MOV $3 $2
MOV $2 $1
BRE .label__fib__base_under_case $2 $3
// +0; 1 -> 2
// +2; 2 -> 3
IMM $2 1
// +1; 3 -> 2
MOV $3 $1
SUB $3 $3 $2
// +1; 2 -> 2
// begin call to $fib
PSH $1
// push arguments
PSH $3
CAL .func__fib
// pop arguments
ADD SP SP 1
// pop rest of operands
POP $2
// end call to $fib
// +0; 2 -> 2
// +2; 2 -> 3
IMM $3 2
// +1; 3 -> 2
SUB $2 $2 $3
// +1; 2 -> 2
// begin call to $fib
PSH $1
// push arguments
PSH $2
CAL .func__fib
// pop arguments
ADD SP SP 1
// pop rest of operands
POP $2
// end call to $fib
// +0; 2 -> 1
ADD $2 $2 $1
// +0; 1 -> ?
MOV $1 $2
RET
// +0; 1 -> 1
// +1; 1 -> 1
.label__fib__base_under_case
// +0; 1 -> ?
RET
.func__main
// +0; 0 -> 1
IMM $1 20
// +1; 1 -> 2
IMM $2 .func__fib
// +0; 2 -> 2
// +0; 2 -> 1
// begin icall
// push arguments
PSH $2
CAL $1
// pop arguments
ADD SP SP 1
// pop rest of operands
// end icall
// +0; 1 -> 0
OUT %NUMB $1
